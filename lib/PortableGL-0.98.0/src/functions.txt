
/*
 * If you want to use any of these old functions from the
 * fixed function pipeline you can use TinyGL or Mesa
 * for software rendering version or implement them as wrappers
 * around modern OpenGL
void     glBegin(GLenum);
void     glClear(GLbitfield);
void     glClearColor(GLclampf, GLclmapf, GLclampf, GLclampf);
void     glColor3f(GLfloat, GLfloat, GLfloat);
void     glColor4f(GLfloat, GLfloat, GLfloat, GLfloat);
void     glCullFace(GLenum);
void     glDisable(GLenum);
void     glEnable(GLenum);
void     glEnd(void);
void     glFrustum(GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble);
GLubyte *glGetString(GLenum);
void     glLoadIdentity(void);
void     glMatrixMode(GLenum);
void     glRotatef(GLfloat, GLfloat, GLfloat, GLfloat);
void     glRotated(GLdouble, GLdouble, GLdouble, GLdouble);
void     glScalef(GLfloat, GLfloat, GLfloat);
void     glScaled(GLdouble, GLdouble, GLdouble);
void     glScissor(GLint, GLint, GLsizei, GLsizei);
void     glTexCoord1f(GLfloat);
void     glTexCoord2f(GLfloat, GLfloat);
void     glTexCoord3f(GLfloat, GLfloat, GLfloat);
void     glTexCoord4f(GLfloat, GLfloat, GLfloat, GLfloat);
void     glTexCoord1d(GLdouble);
void     glTexCoord2d(GLdouble, GLdouble);
void     glTexCoord3d(GLdouble, GLdouble, GLdouble);
void     glTexCoord4d(GLdouble, GLdouble, GLdouble, GLdouble);
void     glTexImage2D(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid*);
void     glTexSubImage2D(GLenum GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const GLvoid*);
void     glTranslatef(GLfloat, GLfloat, GLfloat);
void     glTranslated(GLdouble, GLdouble, GLdouble);
void     glVertex2f(GLfloat, GLfloat);
void     glVertex3f(GLfloat, GLfloat, GLfloat);
void     glVertex4f(GLfloat, GLfloat, GLfloat);
void     glViewport(GLint, GLint, GLsizei, GLsizei);
*/


/* 3.3 core
void     glActiveTexture(GLenum);
void     glAttachShader(GLuint, GLuint);
void     glBeginConditionalRender(GLuint, GLenum);
void     glBeginQuery(GLenum, GLuint);
void     glBeginTransformFeedback(GLenum);
void     glBindAttribLocation(GLuint, GLuint, const GLchar*);
void     glBindBuffer(GLenum, GLuint);
void     glBindBufferBase(GLenum, GLuint, GLuint);
void     glBindBufferRange(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr);
void     glBindFragDataLocation(GLuint, GLuint, const char*);
void     glBindFragDataLocationIndexed(GLuint, GLuint, GLuint, const char*);
void     glBindFramebuffer(GLenum, GLuint);
void     glBindRenderbuffer(GLenum, GLuint);
void     glBindSampler(GLuint, GLuint);
void     glBindTexture(GLenum, GLuint);
void     glBindVertexArray(GLuint);
void     glBlendColor(GLclampf, GLclampf, GLclampf, GLclampf);
void     glBlendEquation(GLenum);
void     glBlendEquationSeparate(GLenum, GLenum);
void     glBlendFunc(GLenum, GLenum);
void     glBlendFuncSeparate(GLenum, GLenum, GLenum, GLenum);
void     glBlitFramebuffer(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);
void     glBufferData(GLenum, GLsizeiptr, const GLvoid*, GLenum);
void     glBufferSubData(GLenum, GLintptr, GLsizeiptr, const GLvoid*);
void     glCheckFramebufferStatus(GLenum);
void     glClampColor(GLenum, GLenum);
void     glClear(GLbitfield);

void     glClearBufferiv(GLenum, GLint, const GLint*);
void     glClearBufferuiv(GLenum, GLint, const GLint*);
void     glClearBufferfv(GLenum, GLint, const GLfloat*);
void     glClearBufferfi(GLenum, GLint, GLfloat, GLint);

void     glClearColor(GLclampf, GLclampf, GLclampf, GLclampf);
void     glClearDepth(GLclampd);
void     glClearStencil(GLint);
void     glCLientWaitSync(GLsync, GLbitfield, GLuint64);
void     glColorMask(GLboolean, GLboolean, GLboolean, GLboolean);
void     glCompileShader(GLuint);
void     glCompressedTexImage1D(GLenum, GLint, GLsizei, GLint, GLsizei, const GLvoid*);
void     glCompressedTexImage2D(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const GLvoid*);
void     glCompressedTexImage3D(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const GLvoid*);
void     glCompressedTexSubImage1D(GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const GLvoid*);


*/
